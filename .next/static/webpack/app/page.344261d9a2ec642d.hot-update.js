"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/modules/kis_stock_api.js":
/*!******************************************!*\
  !*** ./src/app/modules/kis_stock_api.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/kis_secret */ \"(app-pages-browser)/./src/app/config/kis_secret.js\");\n/* harmony import */ var _kis_token__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kis_token */ \"(app-pages-browser)/./src/app/modules/kis_token.js\");\n\n\nconst getStock = async ()=>{\n    try {\n        // 비동기적으로 토큰을 가져옵니다.\n        const token = await (0,_kis_token__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        // 쿼리 파라미터를 URL에 포함시킵니다.\n        const queryParams = new URLSearchParams({\n            FID_INPUT_ISCD: \"900100\",\n            FID_COND_MRKT_DIV_CODE: \"J\"\n        }).toString();\n        const url = \"https://openapivts.koreainvestment.com:29443/uapi/domestic-stock/v1/quotations/inquire-price?\".concat(queryParams);\n        const kisGetStockPetchOption = {\n            method: \"GET\",\n            headers: {\n                authorization: \"Bearer \".concat(token),\n                tr_id: _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__.KIS_TR_ID,\n                appkey: _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__.KIS_APP_KEY,\n                appsecret: _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__.KIS_APP_SECRET,\n                custtype: \"P\"\n            }\n        };\n        const response = await fetch(url, kisGetStockPetchOption);\n        if (!response.ok) {\n            throw new Error(\"API 호출 실패: \".concat(response.status, \" \").concat(response.statusText));\n        }\n        const json = await response.json();\n        console.log(response);\n        console.log(json);\n        // const output = json.output;\n        // const papr = output.papr;\n        // const pdno = output.pdno;\n        // const prdt_name = output.prdt_name;\n        const { output, papr: papr1, pdno: pdno1, prdt_name } = json;\n        return {\n            stockPrice: papr1,\n            pdno: pdno1,\n            stockName: prdt_name\n        };\n    } catch (error) {\n        console.error(\"주식 정보를 가져오는 중 오류 발생:\", error);\n    }\n    const token = (0,_kis_token__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    const kisGetStockPetchOption = {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__.CONTENT_TYPE,\n            authorization: token,\n            tr_id: _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__.KIS_TR_ID,\n            appkey: _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__.KIS_APP_KEY,\n            appsecret: _config_kis_secret__WEBPACK_IMPORTED_MODULE_0__.KIS_APP_SECRET,\n            custtype: \"P\"\n        },\n        queryParameter: JSON.stringify({\n            PDNO: \"000660\",\n            PRDT_TYPE_CD: \"300\"\n        })\n    };\n    const getStock = async ()=>{\n        const url = \"https://openapivts.koreainvestment.com:29443/uapi/domestic-stock/v1/quotations/inquire-price\";\n        const response = await fetch(url, kisGetStockPetchOption);\n        const json = await response.json();\n        console.log(response);\n        console.log(json);\n        const output = json.output;\n        const stck_shrn_iscd = output.stck_shrn_iscd;\n        const avls = output.hts_avls;\n        const prdt_name = output.prdt_name;\n        return {\n            stockPrice: papr,\n            pdno: pdno,\n            stockName: prdt_name\n        };\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (getStock);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvbW9kdWxlcy9raXNfc3RvY2tfYXBpLmpzIiwibWFwcGluZ3MiOiI7OztBQUs4QjtBQUNLO0FBRW5DLE1BQU1LLFdBQVc7SUFDZixJQUFJO1FBQ0Ysb0JBQW9CO1FBQ3BCLE1BQU1DLFFBQVEsTUFBTUYsc0RBQVFBO1FBRTVCLHdCQUF3QjtRQUN4QixNQUFNRyxjQUFjLElBQUlDLGdCQUFnQjtZQUN0Q0MsZ0JBQWdCO1lBQ2hCQyx3QkFBd0I7UUFDMUIsR0FBR0MsUUFBUTtRQUVYLE1BQU1DLE1BQU0sZ0dBQTRHLE9BQVpMO1FBRTVHLE1BQU1NLHlCQUF5QjtZQUM3QkMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQQyxlQUFlLFVBQWdCLE9BQU5WO2dCQUN6QlcsT0FBT2YseURBQVNBO2dCQUNoQmdCLFFBQVFqQiwyREFBV0E7Z0JBQ25Ca0IsV0FBV2hCLDhEQUFjQTtnQkFDekJpQixVQUFVO1lBQ1o7UUFDRjtRQUVBLE1BQU1DLFdBQVcsTUFBTUMsTUFBTVYsS0FBS0M7UUFFbEMsSUFBSSxDQUFDUSxTQUFTRSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUNSLGNBQWlDSCxPQUFuQkEsU0FBU0ksTUFBTSxFQUFDLEtBQXVCLE9BQXBCSixTQUFTSyxVQUFVO1FBRXhEO1FBRUEsTUFBTUMsT0FBTyxNQUFNTixTQUFTTSxJQUFJO1FBQ2hDQyxRQUFRQyxHQUFHLENBQUNSO1FBQ1pPLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFFWiw4QkFBOEI7UUFDOUIsNEJBQTRCO1FBQzVCLDRCQUE0QjtRQUM1QixzQ0FBc0M7UUFFdEMsTUFBTSxFQUFFRyxNQUFNLEVBQUVDLE1BQUFBLEtBQUksRUFBRUMsTUFBQUEsS0FBSSxFQUFFQyxTQUFTLEVBQUUsR0FBR047UUFFMUMsT0FBTztZQUNMTyxZQUFZSDtZQUNaQyxNQUFNQTtZQUNORyxXQUFXRjtRQUNiO0lBQ0YsRUFBRSxPQUFPRyxPQUFPO1FBQ2RSLFFBQVFRLEtBQUssQ0FBQyx3QkFBd0JBO0lBQ3hDO0lBQ0EsTUFBTTlCLFFBQVFGLHNEQUFRQTtJQUN0QixNQUFNUyx5QkFBeUI7UUFDN0JDLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQmYsNERBQVlBO1lBQzVCZ0IsZUFBZVY7WUFDZlcsT0FBT2YseURBQVNBO1lBQ2hCZ0IsUUFBUWpCLDJEQUFXQTtZQUNuQmtCLFdBQVdoQiw4REFBY0E7WUFDekJpQixVQUFVO1FBQ1o7UUFDQWlCLGdCQUFnQkMsS0FBS0MsU0FBUyxDQUFDO1lBQzdCQyxNQUFNO1lBQ05DLGNBQWM7UUFDaEI7SUFDRjtJQUNBLE1BQU1wQyxXQUFXO1FBQ2YsTUFBTU8sTUFDSjtRQUNGLE1BQU1TLFdBQVcsTUFBTUMsTUFBTVYsS0FBS0M7UUFDbEMsTUFBTWMsT0FBTyxNQUFNTixTQUFTTSxJQUFJO1FBQ2hDQyxRQUFRQyxHQUFHLENBQUNSO1FBQ1pPLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFFWixNQUFNRyxTQUFTSCxLQUFLRyxNQUFNO1FBQzFCLE1BQU1ZLGlCQUFpQlosT0FBT1ksY0FBYztRQUM1QyxNQUFNQyxPQUFPYixPQUFPYyxRQUFRO1FBQzVCLE1BQU1YLFlBQVlILE9BQU9HLFNBQVM7UUFDbEMsT0FBTztZQUNMQyxZQUFZSDtZQUNaQyxNQUFNQTtZQUNORyxXQUFXRjtRQUNiO0lBQ0Y7QUFDRjtBQUNBLCtEQUFlNUIsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL21vZHVsZXMva2lzX3N0b2NrX2FwaS5qcz82ODNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgQ09OVEVOVF9UWVBFLFxyXG4gIEtJU19BUFBfS0VZLFxyXG4gIEtJU19UUl9JRCxcclxuICBLSVNfQVBQX1NFQ1JFVCxcclxufSBmcm9tIFwiLi4vY29uZmlnL2tpc19zZWNyZXRcIjtcclxuaW1wb3J0IGdldFRva2VuIGZyb20gXCIuL2tpc190b2tlblwiO1xyXG5cclxuY29uc3QgZ2V0U3RvY2sgPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIOu5hOuPmeq4sOyggeycvOuhnCDthqDtgbDsnYQg6rCA7KC47Ji164uI64ukLlxyXG4gICAgY29uc3QgdG9rZW4gPSBhd2FpdCBnZXRUb2tlbigpO1xyXG5cclxuICAgIC8vIOy/vOumrCDtjIzrnbzrr7jthLDrpbwgVVJM7JeQIO2PrO2VqOyLnO2CteuLiOuLpC5cclxuICAgIGNvbnN0IHF1ZXJ5UGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7XHJcbiAgICAgIEZJRF9JTlBVVF9JU0NEOiBcIjkwMDEwMFwiLFxyXG4gICAgICBGSURfQ09ORF9NUktUX0RJVl9DT0RFOiBcIkpcIixcclxuICAgIH0pLnRvU3RyaW5nKCk7XHJcblxyXG4gICAgY29uc3QgdXJsID0gYGh0dHBzOi8vb3BlbmFwaXZ0cy5rb3JlYWludmVzdG1lbnQuY29tOjI5NDQzL3VhcGkvZG9tZXN0aWMtc3RvY2svdjEvcXVvdGF0aW9ucy9pbnF1aXJlLXByaWNlPyR7cXVlcnlQYXJhbXN9YDtcclxuXHJcbiAgICBjb25zdCBraXNHZXRTdG9ja1BldGNoT3B0aW9uID0ge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCxcclxuICAgICAgICB0cl9pZDogS0lTX1RSX0lELFxyXG4gICAgICAgIGFwcGtleTogS0lTX0FQUF9LRVksXHJcbiAgICAgICAgYXBwc2VjcmV0OiBLSVNfQVBQX1NFQ1JFVCxcclxuICAgICAgICBjdXN0dHlwZTogXCJQXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBraXNHZXRTdG9ja1BldGNoT3B0aW9uKTtcclxuXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICBgQVBJIO2YuOy2nCDsi6TtjKg6ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YFxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XHJcbiAgICBjb25zb2xlLmxvZyhqc29uKTtcclxuXHJcbiAgICAvLyBjb25zdCBvdXRwdXQgPSBqc29uLm91dHB1dDtcclxuICAgIC8vIGNvbnN0IHBhcHIgPSBvdXRwdXQucGFwcjtcclxuICAgIC8vIGNvbnN0IHBkbm8gPSBvdXRwdXQucGRubztcclxuICAgIC8vIGNvbnN0IHByZHRfbmFtZSA9IG91dHB1dC5wcmR0X25hbWU7XHJcblxyXG4gICAgY29uc3QgeyBvdXRwdXQsIHBhcHIsIHBkbm8sIHByZHRfbmFtZSB9ID0ganNvbjtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzdG9ja1ByaWNlOiBwYXByLCAvLyDslaHrqbTqsIBcclxuICAgICAgcGRubzogcGRubywgLy8g7IOB7ZKI67KI7Zi4XHJcbiAgICAgIHN0b2NrTmFtZTogcHJkdF9uYW1lLCAvLyDsg4HtkojsnbTrpoRcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCLso7zsi50g7KCV67O066W8IOqwgOyguOyYpOuKlCDspJEg7Jik66WYIOuwnOyDnTpcIiwgZXJyb3IpO1xyXG4gIH1cclxuICBjb25zdCB0b2tlbiA9IGdldFRva2VuKCk7XHJcbiAgY29uc3Qga2lzR2V0U3RvY2tQZXRjaE9wdGlvbiA9IHtcclxuICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgXCJDb250ZW50LVR5cGVcIjogQ09OVEVOVF9UWVBFLFxyXG4gICAgICBhdXRob3JpemF0aW9uOiB0b2tlbixcclxuICAgICAgdHJfaWQ6IEtJU19UUl9JRCxcclxuICAgICAgYXBwa2V5OiBLSVNfQVBQX0tFWSxcclxuICAgICAgYXBwc2VjcmV0OiBLSVNfQVBQX1NFQ1JFVCxcclxuICAgICAgY3VzdHR5cGU6IFwiUFwiLFxyXG4gICAgfSxcclxuICAgIHF1ZXJ5UGFyYW1ldGVyOiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIFBETk86IFwiMDAwNjYwXCIsXHJcbiAgICAgIFBSRFRfVFlQRV9DRDogXCIzMDBcIixcclxuICAgIH0pLFxyXG4gIH07XHJcbiAgY29uc3QgZ2V0U3RvY2sgPSBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCB1cmwgPVxyXG4gICAgICBcImh0dHBzOi8vb3BlbmFwaXZ0cy5rb3JlYWludmVzdG1lbnQuY29tOjI5NDQzL3VhcGkvZG9tZXN0aWMtc3RvY2svdjEvcXVvdGF0aW9ucy9pbnF1aXJlLXByaWNlXCI7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwga2lzR2V0U3RvY2tQZXRjaE9wdGlvbik7XHJcbiAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG4gICAgY29uc29sZS5sb2coanNvbik7XHJcblxyXG4gICAgY29uc3Qgb3V0cHV0ID0ganNvbi5vdXRwdXQ7XHJcbiAgICBjb25zdCBzdGNrX3Nocm5faXNjZCA9IG91dHB1dC5zdGNrX3Nocm5faXNjZDtcclxuICAgIGNvbnN0IGF2bHMgPSBvdXRwdXQuaHRzX2F2bHM7XHJcbiAgICBjb25zdCBwcmR0X25hbWUgPSBvdXRwdXQucHJkdF9uYW1lO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3RvY2tQcmljZTogcGFwciwgLy/slaHrqbTqsIBcclxuICAgICAgcGRubzogcGRubywgLy/sg4HtkojrsojtmLhcclxuICAgICAgc3RvY2tOYW1lOiBwcmR0X25hbWUsIC8v7IOB7ZKI7J2066aEXHJcbiAgICB9O1xyXG4gIH07XHJcbn07XHJcbmV4cG9ydCBkZWZhdWx0IGdldFN0b2NrO1xyXG4iXSwibmFtZXMiOlsiQ09OVEVOVF9UWVBFIiwiS0lTX0FQUF9LRVkiLCJLSVNfVFJfSUQiLCJLSVNfQVBQX1NFQ1JFVCIsImdldFRva2VuIiwiZ2V0U3RvY2siLCJ0b2tlbiIsInF1ZXJ5UGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwiRklEX0lOUFVUX0lTQ0QiLCJGSURfQ09ORF9NUktUX0RJVl9DT0RFIiwidG9TdHJpbmciLCJ1cmwiLCJraXNHZXRTdG9ja1BldGNoT3B0aW9uIiwibWV0aG9kIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJ0cl9pZCIsImFwcGtleSIsImFwcHNlY3JldCIsImN1c3R0eXBlIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJvdXRwdXQiLCJwYXByIiwicGRubyIsInByZHRfbmFtZSIsInN0b2NrUHJpY2UiLCJzdG9ja05hbWUiLCJlcnJvciIsInF1ZXJ5UGFyYW1ldGVyIiwiSlNPTiIsInN0cmluZ2lmeSIsIlBETk8iLCJQUkRUX1RZUEVfQ0QiLCJzdGNrX3Nocm5faXNjZCIsImF2bHMiLCJodHNfYXZscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/modules/kis_stock_api.js\n"));

/***/ })

});